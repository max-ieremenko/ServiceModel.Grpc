//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Grpc.Core.Utils;
using ServiceModel.Grpc.Channel;

#nullable enable

namespace ServiceModel.Grpc.Internal.Descriptors;

internal sealed class MessageAccessor : IMessageAccessor
{
    public MessageAccessor(string[] names)
    {
        if (GrpcPreconditions.CheckNotNull(names, nameof(names)).Length != 0)
        {
            throw new ArgumentOutOfRangeException(nameof(names));
        }

        Names = names;
    }

    public string[] Names { get; }

    public object CreateNew() => new Message();

    public Type GetInstanceType() => typeof(Message);

    public Type GetValueType(int property)
    {
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public object? GetValue(object message, int property)
    {
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public void SetValue(object message, int property, object? value)
    {
        throw new ArgumentOutOfRangeException(nameof(property));
    }
}

internal sealed class MessageAccessor<T1> : IMessageAccessor
{
    public MessageAccessor(string[] names)
    {
        if (GrpcPreconditions.CheckNotNull(names, nameof(names)).Length != 1)
        {
            throw new ArgumentOutOfRangeException(nameof(names));
        }

        Names = names;
    }

    public string[] Names { get; }

    public object CreateNew() => new Message<T1>();

    public Type GetInstanceType() => typeof(Message<T1>);

    public Type GetValueType(int property)
    {
        switch (property)
        {
            case 1:
                return typeof(T1);
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public object? GetValue(object message, int property)
    {
        switch (property)
        {
            case 1:
                return GrpcPreconditions.CheckNotNull((Message<T1>)message, nameof(message)).Value1;
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public void SetValue(object message, int property, object? value)
    {
        switch (property)
        {
            case 1:
                GrpcPreconditions.CheckNotNull((Message<T1>)message, nameof(message)).Value1 = (T1?)value;
                return;
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }
}

internal sealed class MessageAccessor<T1, T2> : IMessageAccessor
{
    public MessageAccessor(string[] names)
    {
        if (GrpcPreconditions.CheckNotNull(names, nameof(names)).Length != 2)
        {
            throw new ArgumentOutOfRangeException(nameof(names));
        }

        Names = names;
    }

    public string[] Names { get; }

    public object CreateNew() => new Message<T1, T2>();

    public Type GetInstanceType() => typeof(Message<T1, T2>);

    public Type GetValueType(int property)
    {
        switch (property)
        {
            case 1:
                return typeof(T1);
            case 2:
                return typeof(T2);
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public object? GetValue(object message, int property)
    {
        switch (property)
        {
            case 1:
                return GrpcPreconditions.CheckNotNull((Message<T1, T2>)message, nameof(message)).Value1;
            case 2:
                return GrpcPreconditions.CheckNotNull((Message<T1, T2>)message, nameof(message)).Value2;
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public void SetValue(object message, int property, object? value)
    {
        switch (property)
        {
            case 1:
                GrpcPreconditions.CheckNotNull((Message<T1, T2>)message, nameof(message)).Value1 = (T1?)value;
                return;
            case 2:
                GrpcPreconditions.CheckNotNull((Message<T1, T2>)message, nameof(message)).Value2 = (T2?)value;
                return;
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }
}

internal sealed class MessageAccessor<T1, T2, T3> : IMessageAccessor
{
    public MessageAccessor(string[] names)
    {
        if (GrpcPreconditions.CheckNotNull(names, nameof(names)).Length != 3)
        {
            throw new ArgumentOutOfRangeException(nameof(names));
        }

        Names = names;
    }

    public string[] Names { get; }

    public object CreateNew() => new Message<T1, T2, T3>();

    public Type GetInstanceType() => typeof(Message<T1, T2, T3>);

    public Type GetValueType(int property)
    {
        switch (property)
        {
            case 1:
                return typeof(T1);
            case 2:
                return typeof(T2);
            case 3:
                return typeof(T3);
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public object? GetValue(object message, int property)
    {
        switch (property)
        {
            case 1:
                return GrpcPreconditions.CheckNotNull((Message<T1, T2, T3>)message, nameof(message)).Value1;
            case 2:
                return GrpcPreconditions.CheckNotNull((Message<T1, T2, T3>)message, nameof(message)).Value2;
            case 3:
                return GrpcPreconditions.CheckNotNull((Message<T1, T2, T3>)message, nameof(message)).Value3;
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }

    public void SetValue(object message, int property, object? value)
    {
        switch (property)
        {
            case 1:
                GrpcPreconditions.CheckNotNull((Message<T1, T2, T3>)message, nameof(message)).Value1 = (T1?)value;
                return;
            case 2:
                GrpcPreconditions.CheckNotNull((Message<T1, T2, T3>)message, nameof(message)).Value2 = (T2?)value;
                return;
            case 3:
                GrpcPreconditions.CheckNotNull((Message<T1, T2, T3>)message, nameof(message)).Value3 = (T3?)value;
                return;
        }
        throw new ArgumentOutOfRangeException(nameof(property));
    }
}

